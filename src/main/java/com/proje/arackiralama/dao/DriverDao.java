package com.proje.arackiralama.dao; // DAO sÄ±nÄ±flarÄ±nÄ±n bulunduÄŸu paket

// Gerekli sÄ±nÄ±flar ve anotasyonlar import ediliyor
import com.proje.arackiralama.model.Driver; // Driver (sÃ¼rÃ¼cÃ¼) model sÄ±nÄ±fÄ±
import com.proje.arackiralama.repository.DriverRepository; // Spring Data JPA ile veritabanÄ± iÅŸlemleri
import org.springframework.beans.factory.annotation.Autowired; // Otomatik baÄŸÄ±mlÄ±lÄ±k enjeksiyonu
import org.springframework.stereotype.Repository; // Springâ€™e bunun bir Repository sÄ±nÄ±fÄ± olduÄŸunu belirtir

import java.util.List;

@Repository // Bu sÄ±nÄ±f, Spring tarafÄ±ndan bir repository bileÅŸeni olarak yÃ¶netilir
public class DriverDao {

    @Autowired // Spring, DriverRepository Ã¶rneÄŸini buraya enjekte eder
    private DriverRepository driverRepository;

    // ğŸ”½ TÃ¼m sÃ¼rÃ¼cÃ¼leri veritabanÄ±ndan getirir
    public List<Driver> getAllDrivers() {
        return driverRepository.findAll(); // TÃ¼m Driver kayÄ±tlarÄ±nÄ± dÃ¶ner
    }

    // ğŸ”½ ID'si verilen sÃ¼rÃ¼cÃ¼yÃ¼ getirir, yoksa null dÃ¶ner
    public Driver getDriverById(int id) {
        return driverRepository.findById(id).orElse(null); // Optional kullanÄ±mÄ±, null kontrolÃ¼ iÃ§erir
    }

    // ğŸ”½ SÃ¼rÃ¼cÃ¼yÃ¼ kaydeder ya da gÃ¼nceller
    public void saveDriver(Driver driver) {
        driverRepository.save(driver); // insert veya update iÅŸlemi yapar
    }

    // ğŸ”½ TC Kimlik numarasÄ±na gÃ¶re sÃ¼rÃ¼cÃ¼yÃ¼ getirir
    public Driver getDriverByTcNo(String tcNo) {
        return driverRepository.findByTcNo(tcNo); // Custom query â€” repository iÃ§inde tanÄ±mlÄ± olmalÄ±
    }
}
