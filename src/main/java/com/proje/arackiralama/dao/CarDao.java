package com.proje.arackiralama.dao; // DAO sÄ±nÄ±flarÄ±nÄ±n yer aldÄ±ÄŸÄ± paket

// Gerekli sÄ±nÄ±flar import ediliyor
import com.proje.arackiralama.model.Car; // AraÃ§ model sÄ±nÄ±fÄ±
import com.proje.arackiralama.repository.CarRepository; // Spring Data JPA repository arayÃ¼zÃ¼
import org.springframework.beans.factory.annotation.Autowired; // BaÄŸÄ±mlÄ±lÄ±k enjeksiyonu
import org.springframework.stereotype.Repository; // Spring'e bu sÄ±nÄ±fÄ±n bir Repository olduÄŸunu bildirir

import java.util.List;

@Repository // Spring tarafÄ±ndan otomatik olarak bean olarak tanÄ±mlanÄ±r
public class CarDao {

    @Autowired // CarRepository otomatik olarak enjekte edilir
    private CarRepository carRepository;

    // ğŸ”½ Yeni araÃ§ kaydeder veya mevcut aracÄ± gÃ¼nceller
    public void saveCar(Car car) {
        carRepository.save(car); // insert veya update iÅŸlemi yapÄ±lÄ±r
    }

    // ğŸ”½ Belirtilen IDâ€™ye sahip aracÄ± siler
    public void deleteCarById(int id) {
        carRepository.deleteById(id);
    }

    // ğŸ”½ TÃ¼m araÃ§larÄ± veritabanÄ±ndan getirir
    public List<Car> getAllCars() {
        return carRepository.findAll(); // TÃ¼m araÃ§larÄ± liste olarak dÃ¶ner
    }

    // ğŸ”½ IDâ€™ye gÃ¶re bir aracÄ± getirir, yoksa null dÃ¶ner
    public Car getCarById(int id) {
        return carRepository.findById(id).orElse(null); // Optional nesne yoksa null dÃ¶ndÃ¼rÃ¼lÃ¼r
    }

    // ğŸ”½ Belirli koltuk sayÄ±sÄ±na sahip ve kiralanabilir (available) araÃ§larÄ± getirir
    public List<Car> getAvailableCarsBySeatingCapacity(int capacity) {
        return carRepository.findBySeatingCapacityAndAvailableForBookingTrue(capacity);
        // Bu metod, CarRepository iÃ§inde tanÄ±mlanmÄ±ÅŸ olmalÄ±
    }

    // ğŸ”½ Model adÄ± verilen anahtar kelimeyle baÅŸlayan araÃ§larÄ± getirir (bÃ¼yÃ¼k/kÃ¼Ã§Ã¼k harf duyarsÄ±z)
    public List<Car> searchCarsByModelPrefix(String keyword) {
        return carRepository.findByModelStartingWithIgnoreCase(keyword);
        // Bu da CarRepository iÃ§inde tanÄ±mlÄ± Ã¶zel bir sorgudur
    }
}
