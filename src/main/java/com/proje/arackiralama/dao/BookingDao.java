package com.proje.arackiralama.dao; // DAO sÄ±nÄ±flarÄ±nÄ± barÄ±ndÄ±ran paket

// Gerekli sÄ±nÄ±flar import ediliyor
import com.proje.arackiralama.model.Booking; // Rezervasyon model sÄ±nÄ±fÄ±
import com.proje.arackiralama.repository.BookingRepository; // Spring Data JPA repository arayÃ¼zÃ¼
import org.springframework.beans.factory.annotation.Autowired; // BaÄŸÄ±mlÄ±lÄ±k enjeksiyonu iÃ§in
import org.springframework.stereotype.Repository; // Bu sÄ±nÄ±fÄ±n bir repository/dao bileÅŸeni olduÄŸunu belirtir

import java.util.List;
import java.util.Optional;

@Repository // Spring tarafÄ±ndan repository bean olarak tanÄ±mlanÄ±r
public class BookingDao {

    @Autowired // Spring, BookingRepository Ã¶rneÄŸini otomatik olarak enjekte eder
    private BookingRepository bookingRepository;

    // ğŸ”½ TÃ¼m rezervasyonlarÄ± veritabanÄ±ndan getirir
    public List<Booking> getAllBookings() {
        return bookingRepository.findAll(); // TÃ¼m kayÄ±tlarÄ± dÃ¶ner
    }

    // ğŸ”½ Belirtilen IDâ€™ye sahip rezervasyonu siler
    public void deleteById(int id) {
        bookingRepository.deleteById(id); // Silme iÅŸlemi
    }

    // ğŸ”½ ID ile rezervasyonu bulur
    public Optional<Booking> getBookingById(int id) {
        return bookingRepository.findById(id); // Optional olarak dÃ¶ner (null olabilir)
    }

    // ğŸ”½ Yeni rezervasyon kaydeder veya mevcut olanÄ± gÃ¼nceller
    public void saveBooking(Booking booking) {
        bookingRepository.save(booking); // insert veya update iÅŸlemi yapar
    }

    // ğŸ”½ Araca ait rezervasyonu getirir
    public Optional<Booking> getByCarId(int carId) {
        return bookingRepository.findByCarId(carId); // Custom query (BookingRepository iÃ§inde tanÄ±mlanmalÄ±)
    }

    // ğŸ”½ SÃ¼rÃ¼cÃ¼ye ait rezervasyonu getirir
    public Optional<Booking> getByDriverId(int driverId) {
        return bookingRepository.findByDriverId(driverId); // Custom query
    }

    // ğŸ”½ KullanÄ±cÄ± adÄ±na gÃ¶re rezervasyonlarÄ± listeler
    public List<Booking> getByUsername(String username) {
        return bookingRepository.findByUsername(username); // Custom query (List dÃ¶ner)
    }
}
